// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto

package protocol;

public final class Command {
  private Command() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code Command.ErrorCode}
   */
  public enum ErrorCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Success = 0;</code>
     */
    Success(0, 0),
    ;

    /**
     * <code>Success = 0;</code>
     */
    public static final int Success_VALUE = 0;


    public final int getNumber() { return value; }

    public static ErrorCode valueOf(int value) {
      switch (value) {
        case 0: return Success;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
            public ErrorCode findValueByNumber(int number) {
              return ErrorCode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocol.Command.getDescriptor().getEnumTypes().get(0);
    }

    private static final ErrorCode[] VALUES = values();

    public static ErrorCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ErrorCode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Command.ErrorCode)
  }

  /**
   * Protobuf enum {@code Command.ServiceType}
   */
  public enum ServiceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Login = 1;</code>
     */
    Login(0, 1),
    ;

    /**
     * <code>Login = 1;</code>
     */
    public static final int Login_VALUE = 1;


    public final int getNumber() { return value; }

    public static ServiceType valueOf(int value) {
      switch (value) {
        case 1: return Login;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ServiceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ServiceType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ServiceType>() {
            public ServiceType findValueByNumber(int number) {
              return ServiceType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocol.Command.getDescriptor().getEnumTypes().get(1);
    }

    private static final ServiceType[] VALUES = values();

    public static ServiceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ServiceType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Command.ServiceType)
  }

  /**
   * Protobuf enum {@code Command.ChannelID}
   */
  public enum ChannelID
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Normal = 1;</code>
     */
    Normal(0, 1),
    ;

    /**
     * <code>Normal = 1;</code>
     */
    public static final int Normal_VALUE = 1;


    public final int getNumber() { return value; }

    public static ChannelID valueOf(int value) {
      switch (value) {
        case 1: return Normal;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChannelID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChannelID>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChannelID>() {
            public ChannelID findValueByNumber(int number) {
              return ChannelID.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocol.Command.getDescriptor().getEnumTypes().get(2);
    }

    private static final ChannelID[] VALUES = values();

    public static ChannelID valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChannelID(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Command.ChannelID)
  }

  /**
   * Protobuf enum {@code Command.MessageID}
   */
  public enum MessageID
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RegisterRequest = 257;</code>
     */
    RegisterRequest(0, 257),
    /**
     * <code>RegisterResponse = 258;</code>
     */
    RegisterResponse(1, 258),
    ;

    /**
     * <code>RegisterRequest = 257;</code>
     */
    public static final int RegisterRequest_VALUE = 257;
    /**
     * <code>RegisterResponse = 258;</code>
     */
    public static final int RegisterResponse_VALUE = 258;


    public final int getNumber() { return value; }

    public static MessageID valueOf(int value) {
      switch (value) {
        case 257: return RegisterRequest;
        case 258: return RegisterResponse;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageID>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageID>() {
            public MessageID findValueByNumber(int number) {
              return MessageID.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocol.Command.getDescriptor().getEnumTypes().get(3);
    }

    private static final MessageID[] VALUES = values();

    public static MessageID valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MessageID(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Command.MessageID)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rcommand.proto\022\007Command*\030\n\tErrorCode\022\013\n" +
      "\007Success\020\000*\030\n\013ServiceType\022\t\n\005Login\020\001*\027\n\t" +
      "ChannelID\022\n\n\006Normal\020\001*8\n\tMessageID\022\024\n\017Re" +
      "gisterRequest\020\201\002\022\025\n\020RegisterResponse\020\202\002B" +
      "\023\n\010protocolB\007Command"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
