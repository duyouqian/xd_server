// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package protocol;

public final class RPC {
  private RPC() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code RPC.ServerID}
   */
  public enum ServerID
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MASTER = 1;</code>
     */
    MASTER(0, 1),
    ;

    /**
     * <code>MASTER = 1;</code>
     */
    public static final int MASTER_VALUE = 1;


    public final int getNumber() { return value; }

    public static ServerID valueOf(int value) {
      switch (value) {
        case 1: return MASTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ServerID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ServerID>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ServerID>() {
            public ServerID findValueByNumber(int number) {
              return ServerID.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocol.RPC.getDescriptor().getEnumTypes().get(0);
    }

    private static final ServerID[] VALUES = values();

    public static ServerID valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ServerID(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RPC.ServerID)
  }

  /**
   * Protobuf enum {@code RPC.MethodID}
   */
  public enum MethodID
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RegisterServer = 1;</code>
     */
    RegisterServer(0, 1),
    ;

    /**
     * <code>RegisterServer = 1;</code>
     */
    public static final int RegisterServer_VALUE = 1;


    public final int getNumber() { return value; }

    public static MethodID valueOf(int value) {
      switch (value) {
        case 1: return RegisterServer;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MethodID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MethodID>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MethodID>() {
            public MethodID findValueByNumber(int number) {
              return MethodID.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocol.RPC.getDescriptor().getEnumTypes().get(1);
    }

    private static final MethodID[] VALUES = values();

    public static MethodID valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MethodID(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RPC.MethodID)
  }

  public interface RpcHeaderOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .RPC.ServerID server = 1;
    /**
     * <code>required .RPC.ServerID server = 1;</code>
     */
    boolean hasServer();
    /**
     * <code>required .RPC.ServerID server = 1;</code>
     */
    protocol.RPC.ServerID getServer();

    // required .RPC.MethodID method = 2;
    /**
     * <code>required .RPC.MethodID method = 2;</code>
     */
    boolean hasMethod();
    /**
     * <code>required .RPC.MethodID method = 2;</code>
     */
    protocol.RPC.MethodID getMethod();
  }
  /**
   * Protobuf type {@code RPC.RpcHeader}
   */
  public static final class RpcHeader extends
      com.google.protobuf.GeneratedMessage
      implements RpcHeaderOrBuilder {
    // Use RpcHeader.newBuilder() to construct.
    private RpcHeader(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RpcHeader(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RpcHeader defaultInstance;
    public static RpcHeader getDefaultInstance() {
      return defaultInstance;
    }

    public RpcHeader getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RpcHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              protocol.RPC.ServerID value = protocol.RPC.ServerID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                server_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              protocol.RPC.MethodID value = protocol.RPC.MethodID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                method_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.RPC.internal_static_RPC_RpcHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.RPC.internal_static_RPC_RpcHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.RPC.RpcHeader.class, protocol.RPC.RpcHeader.Builder.class);
    }

    public static com.google.protobuf.Parser<RpcHeader> PARSER =
        new com.google.protobuf.AbstractParser<RpcHeader>() {
      public RpcHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RpcHeader(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RpcHeader> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .RPC.ServerID server = 1;
    public static final int SERVER_FIELD_NUMBER = 1;
    private protocol.RPC.ServerID server_;
    /**
     * <code>required .RPC.ServerID server = 1;</code>
     */
    public boolean hasServer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .RPC.ServerID server = 1;</code>
     */
    public protocol.RPC.ServerID getServer() {
      return server_;
    }

    // required .RPC.MethodID method = 2;
    public static final int METHOD_FIELD_NUMBER = 2;
    private protocol.RPC.MethodID method_;
    /**
     * <code>required .RPC.MethodID method = 2;</code>
     */
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .RPC.MethodID method = 2;</code>
     */
    public protocol.RPC.MethodID getMethod() {
      return method_;
    }

    private void initFields() {
      server_ = protocol.RPC.ServerID.MASTER;
      method_ = protocol.RPC.MethodID.RegisterServer;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasServer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMethod()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, server_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, method_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, server_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, method_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protocol.RPC.RpcHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.RPC.RpcHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.RPC.RpcHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.RPC.RpcHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.RPC.RpcHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol.RPC.RpcHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol.RPC.RpcHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol.RPC.RpcHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol.RPC.RpcHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol.RPC.RpcHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protocol.RPC.RpcHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RPC.RpcHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protocol.RPC.RpcHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.RPC.internal_static_RPC_RpcHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.RPC.internal_static_RPC_RpcHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.RPC.RpcHeader.class, protocol.RPC.RpcHeader.Builder.class);
      }

      // Construct using protocol.RPC.RpcHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        server_ = protocol.RPC.ServerID.MASTER;
        bitField0_ = (bitField0_ & ~0x00000001);
        method_ = protocol.RPC.MethodID.RegisterServer;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.RPC.internal_static_RPC_RpcHeader_descriptor;
      }

      public protocol.RPC.RpcHeader getDefaultInstanceForType() {
        return protocol.RPC.RpcHeader.getDefaultInstance();
      }

      public protocol.RPC.RpcHeader build() {
        protocol.RPC.RpcHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.RPC.RpcHeader buildPartial() {
        protocol.RPC.RpcHeader result = new protocol.RPC.RpcHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.server_ = server_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.method_ = method_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.RPC.RpcHeader) {
          return mergeFrom((protocol.RPC.RpcHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.RPC.RpcHeader other) {
        if (other == protocol.RPC.RpcHeader.getDefaultInstance()) return this;
        if (other.hasServer()) {
          setServer(other.getServer());
        }
        if (other.hasMethod()) {
          setMethod(other.getMethod());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasServer()) {
          
          return false;
        }
        if (!hasMethod()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.RPC.RpcHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.RPC.RpcHeader) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .RPC.ServerID server = 1;
      private protocol.RPC.ServerID server_ = protocol.RPC.ServerID.MASTER;
      /**
       * <code>required .RPC.ServerID server = 1;</code>
       */
      public boolean hasServer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .RPC.ServerID server = 1;</code>
       */
      public protocol.RPC.ServerID getServer() {
        return server_;
      }
      /**
       * <code>required .RPC.ServerID server = 1;</code>
       */
      public Builder setServer(protocol.RPC.ServerID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        server_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .RPC.ServerID server = 1;</code>
       */
      public Builder clearServer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        server_ = protocol.RPC.ServerID.MASTER;
        onChanged();
        return this;
      }

      // required .RPC.MethodID method = 2;
      private protocol.RPC.MethodID method_ = protocol.RPC.MethodID.RegisterServer;
      /**
       * <code>required .RPC.MethodID method = 2;</code>
       */
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .RPC.MethodID method = 2;</code>
       */
      public protocol.RPC.MethodID getMethod() {
        return method_;
      }
      /**
       * <code>required .RPC.MethodID method = 2;</code>
       */
      public Builder setMethod(protocol.RPC.MethodID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        method_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .RPC.MethodID method = 2;</code>
       */
      public Builder clearMethod() {
        bitField0_ = (bitField0_ & ~0x00000002);
        method_ = protocol.RPC.MethodID.RegisterServer;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RPC.RpcHeader)
    }

    static {
      defaultInstance = new RpcHeader(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RPC.RpcHeader)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RPC_RpcHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RPC_RpcHeader_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\trpc.proto\022\003RPC\"I\n\tRpcHeader\022\035\n\006server\030" +
      "\001 \002(\0162\r.RPC.ServerID\022\035\n\006method\030\002 \002(\0162\r.R" +
      "PC.MethodID*\026\n\010ServerID\022\n\n\006MASTER\020\001*\036\n\010M" +
      "ethodID\022\022\n\016RegisterServer\020\001B\017\n\010protocolB" +
      "\003RPC"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RPC_RpcHeader_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RPC_RpcHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RPC_RpcHeader_descriptor,
              new java.lang.String[] { "Server", "Method", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
