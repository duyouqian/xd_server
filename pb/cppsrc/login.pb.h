// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#ifndef PROTOBUF_login_2eproto__INCLUDED
#define PROTOBUF_login_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "command.pb.h"
// @@protoc_insertion_point(includes)

namespace Login {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_login_2eproto();
void protobuf_AssignDesc_login_2eproto();
void protobuf_ShutdownFile_login_2eproto();

class Register;
class RegisterResponse;

// ===================================================================

class Register : public ::google::protobuf::Message {
 public:
  Register();
  virtual ~Register();

  Register(const Register& from);

  inline Register& operator=(const Register& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Register& default_instance();

  void Swap(Register* other);

  // implements Message ----------------------------------------------

  Register* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Register& from);
  void MergeFrom(const Register& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Command.ServiceType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Command::ServiceType type() const;
  inline void set_type(::Command::ServiceType value);

  // required .Command.ChannelID channel = 2 [default = Normal];
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 2;
  inline ::Command::ChannelID channel() const;
  inline void set_channel(::Command::ChannelID value);

  // @@protoc_insertion_point(class_scope:Login.Register)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_channel();
  inline void clear_has_channel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  int channel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static Register* default_instance_;
};
// -------------------------------------------------------------------

class RegisterResponse : public ::google::protobuf::Message {
 public:
  RegisterResponse();
  virtual ~RegisterResponse();

  RegisterResponse(const RegisterResponse& from);

  inline RegisterResponse& operator=(const RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterResponse& default_instance();

  void Swap(RegisterResponse* other);

  // implements Message ----------------------------------------------

  RegisterResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterResponse& from);
  void MergeFrom(const RegisterResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Command.ErrorCode errorCode = 1;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  inline ::Command::ErrorCode errorcode() const;
  inline void set_errorcode(::Command::ErrorCode value);

  // @@protoc_insertion_point(class_scope:Login.RegisterResponse)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int errorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static RegisterResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// Register

// required .Command.ServiceType type = 1;
inline bool Register::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Register::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Register::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Register::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Command::ServiceType Register::type() const {
  return static_cast< ::Command::ServiceType >(type_);
}
inline void Register::set_type(::Command::ServiceType value) {
  assert(::Command::ServiceType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required .Command.ChannelID channel = 2 [default = Normal];
inline bool Register::has_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Register::set_has_channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Register::clear_has_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Register::clear_channel() {
  channel_ = 1;
  clear_has_channel();
}
inline ::Command::ChannelID Register::channel() const {
  return static_cast< ::Command::ChannelID >(channel_);
}
inline void Register::set_channel(::Command::ChannelID value) {
  assert(::Command::ChannelID_IsValid(value));
  set_has_channel();
  channel_ = value;
}

// -------------------------------------------------------------------

// RegisterResponse

// required .Command.ErrorCode errorCode = 1;
inline bool RegisterResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterResponse::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::Command::ErrorCode RegisterResponse::errorcode() const {
  return static_cast< ::Command::ErrorCode >(errorcode_);
}
inline void RegisterResponse::set_errorcode(::Command::ErrorCode value) {
  assert(::Command::ErrorCode_IsValid(value));
  set_has_errorcode();
  errorcode_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Login

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_login_2eproto__INCLUDED
